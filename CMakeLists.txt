cmake_minimum_required(VERSION 2.8)
project(game)

set(BUILD_64BIT Yes)
set(EXE_NAME    out)
set(ROOT_DIR    ${CMAKE_CURRENT_SOURCE_DIR})
set(SRC_DIR     ${ROOT_DIR}/src)
set(DATA_DIR    ${ROOT_DIR}/data)
file(GLOB SRC   ${SRC_DIR}/*.cpp)
file(GLOB HDR   ${SRC_DIR}/*.h)
file(GLOB DATA  ${DATA_DIR}/*)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY                ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY                ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY                ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE        ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG          ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL     ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

add_definitions(-DGLEW_STATIC=1)

source_group(data FILES ${DATA})
source_group(headers FILES ${HDR})
set_source_files_properties(${DATA} PROPERTIES HEADER_FILE_ONLTY TRUE)
set_source_files_properties(${HDR}  PROPERTIES HEADER_FILE_ONLTY TRUE)

if(BUILD_64BIT)
    set(ARCH "x64")
else()
    set(ARCH "x86")
endif()

set(GLEW_DIR ${ROOT_DIR}/glew)
set(SDL_DIR  ${ROOT_DIR}/SDL2)
set(SDL_IMAGE_DIR ${ROOT_DIR}/SDL2_image)
set(GLM_DIR  ${ROOT_DIR}/glm)


include_directories(${GLEW_DIR}/include ${SDL_DIR}/include ${SDL_IMAGE_DIR}/include ${GLM_DIR}/include)

add_subdirectory(glwrap)
include_directories(${GLWRAP_INCLUDE_DIRS})

add_executable(${EXE_NAME} ${SRC} ${HDR} ${DATA})

find_package(OpenGL REQUIRED)

file(GLOB DLLS ${SDL_IMAGE_DIR}/lib/${ARCH}/*.dll)
foreach( file_i ${DLLS})
	add_custom_command(TARGET ${EXE_NAME}
					   POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${file_i} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
endforeach()

if(WIN32)
    target_link_libraries(${EXE_NAME}
		${GLWRAP_LIBRARIES}
		${GLEW_DIR}/lib/Release/${ARCH}/glew32s.lib
		${SDL_DIR}/lib/${ARCH}/SDL2.lib
		${SDL_DIR}/lib/${ARCH}/SDL2main.lib
		${SDL_IMAGE_DIR}/lib/${ARCH}/SDL2_image.lib
		${OPENGL_LIBRARIES})
	add_definitions(-D_CRT_SECURE_NO_WARNINGS=1)
endif()
